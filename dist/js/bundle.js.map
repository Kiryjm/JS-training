{"version":3,"sources":["webpack:///./src/js/main.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACO;;AAEP;;AAEY;;AAEL;AACP;AACA;;AAEA;;AAEe;AACf;AACA,C;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNa;;AAEb;;AAEmC;AACF;;AAEjC;AACA;;AAEA;AACA;;AAEuC;AACL;;AAElC;AACA;;AAEA,WAAW,aAAa;AACxB;;AAEA,eAAe,yCAAK,CAAC,OAAO,yCAAG,CAAC;AAChC,2CAAU;AACV,iDAAQ,G","file":"bundle.js","sourcesContent":["// Named exports\r\nexport let one = 1;\r\n\r\nlet two = 2;\r\n\r\nexport{two};\r\n\r\nexport function sayHi() {\r\n    console.log('Hello');\r\n}\r\n\r\n// Default exports\r\n\r\nexport default function sayDefHi() {\r\n    console.log('Hello');\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\n\r\n// ES6 modules\r\n\r\nimport {one, two} from './main.js';\r\nimport sayDefHi from './main.js';\r\n\r\n// we can use alias for imported long name data\r\n// or use * to import all from module\r\n\r\n// To say browser consequentially add script files use type='module' in index.html\r\n// and use fileName.js syntax in improt statement!\r\n\r\nimport {one as first} from './main.js';\r\nimport * as data from './main.js';\r\n\r\n// // If we use webpack compiled bundle.js in script tag index.html\r\n// // we use fileName without .js in import statement!\r\n\r\n// import {one as first} from './main.js';\r\n// import * as data from './main.js';\r\n\r\nconsole.log(`${first} and ${two}`);\r\ndata.sayHi();\r\nsayDefHi();"],"sourceRoot":""}